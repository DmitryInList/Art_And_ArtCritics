// --------------------------------------------------------------------------------------------------------------
// ---- popov 24.02.2021 ----
// --------------------------------------------------------------------------------------------------------------
// Служебный класс, содержащий тексты всех SQL-запросов (в том числе вложенных друг в друга), 
// которые в совокупности дают все необходимые данные из БД "Искусство и Искусствоведы"...
// --------------------------------------------------------------------------------------------------------------


using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace Art_DataBase_Analytical.Model.SQL_Text
{
    public class SQL_Texts
    {
        // ==================================================================================================
        // ==================================================================================================
        // ==================================================================================================
        // ==== 1. Получение данных об Искусствоведах. ====
        // ==================================================================================================
        // ==================================================================================================
        // ==================================================================================================
        // 1.1. Первый запрос, возвращающий минимальные сведения о Искусствоведе
        //      (только Идентфиикатор и Вес (т.е. значимость его мнения))
        //      Этот запрос служебный и отдельно, сам по себе, не используется.
        public static string SQL_Report_1 =
            "SELECT Critic_ID, Category_Weight " +
            "FROM ArtCritics JOIN ArtCriticCategory ON " +
            "ArtCritics.Critic_Category = ArtCriticCategory.Category_ID";

        // ==================================================================================================
        // 1.2. Второй запрос, возвращающий расширенные сведения о Искусствоведе
        //      (Идентификатор,  Фамилия, Имя, Отчество, Статус и Вес (т.е. значимость его мнения))
        public static string SQL_Report_2 =
            "SELECT Critic_ID, Critic_LastName, Critic_FirstName, Critic_Patronymic, Category_Name, Category_Weight " +
            "FROM ArtCritics JOIN ArtCriticCategory ON " +
            "ArtCritics.Critic_Category = ArtCriticCategory.Category_ID";

        // ==================================================================================================
        // 1.3. Третий запрос, возвращающий еще более расширенные сведения о Искусстоведе
        //      (Идентификатор,  Фамилия, Имя, Отчество, Статус, Вес его мнения и Число статей)
        public static string SQL_Report_3 =
            "SELECT Critic_ID, Critic_LastName, Critic_FirstName, " +
            "Critic_Patronymic, Category_Name, Category_Weight, COUNT(ArtCoAuthors.Coauthor_ID) AS ArticleCount " +
            "FROM (" + SQL_Report_2 + ") AS T1 LEFT JOIN ArtCoAuthors ON " +
            "Critic_ID = ArtCoAuthors.Critic " +
            "GROUP BY Critic_ID, Critic_LastName, Critic_FirstName, Critic_Patronymic, Category_Name, Category_Weight ";

        // ==================================================================================================
        // 1.4. Четвертый запрос, возвращающий самые полные сведения о Искусстоведе
        //      (Идентификатор,  Фамилия, Имя, Отчество, Статус, Вес его мнения, Число статей и Число отзывов)
        public static string SQL_Report_4 =
            "SELECT Critic_ID, Critic_LastName, Critic_FirstName, " +
            "Critic_Patronymic, Category_Name, Category_Weight, ArticleCount, " +
            "COUNT(ArtFeedback.Feedback_ID) AS FeedbackCount " +
            "FROM (" + SQL_Report_3 + ") AS T2 LEFT JOIN ArtFeedback ON " +
            "Critic_ID = ArtFeedback.Critic " +
            "GROUP BY Critic_ID, Critic_LastName, Critic_FirstName, Critic_Patronymic, Category_Name, Category_Weight, ArticleCount " +
            "ORDER BY Category_Weight DESC, Critic_LastName, Critic_FirstName, Critic_Patronymic";

        // ==================================================================================================
        // ==================================================================================================
        // ==================================================================================================
        // ==== 2. Получение данных о Критических отзывах на статьи. ====
        // ==================================================================================================
        // ==================================================================================================
        // ==================================================================================================
        // 2.1. Краткие данные об Отзывах (Текстовая оценка статьи + Предварительная 
        //      целочисленная оценка статьи)
        public static string SQL_Report_5 =
            "SELECT Feedback_ID, Article, Critic, Feedback_Resume, Feedback_Date, Score_Text, Score_Value " +
            "FROM ArtFeedback JOIN ArtScore ON " +
            "Score = Score_ID";

        // ==================================================================================================
        // 2.2. Расширенные сведения об отзыве (Итоговая целочисленная оценка статьи 
        //      с учетом значимости мнения того Искусствоведа, который оставил этот отзыв)
        public static string SQL_Report_6 =
            "SELECT Feedback_ID, Article, Critic, Feedback_Resume, Feedback_Date, Score_Text, (Score_Value * Category_Weight) AS Score_Weight " +
            "FROM (" + SQL_Report_5 + ") AS T3 JOIN (" + SQL_Report_1 + ") AS T4 ON " +
            "Critic = Critic_ID";

        // ==================================================================================================
        // 2.3. Сокращенные сведения об отзыве - только идентификатор статьи и числовая оценка статьи
        //      (это служебный запрос для использования в составе большого запроса на получение
        //      итоговых данных о Статьях)
        public static string SQL_Report_7 =
            "SELECT Feedback_ID, Article, (Score_Value * Category_Weight) AS Score_Weight " +
            "FROM (" + SQL_Report_5 + ") AS T3 JOIN (" + SQL_Report_1 + ") AS T4 ON " +
            "Critic = Critic_ID";

        // ==================================================================================================
        // 2.4. Тот же самый запрос - но с сортировкой (сортировку нельзя применять для вложенных запросов)
        public static string SQL_Report_8 =
            SQL_Report_6 + " ORDER BY Score_Weight DESC, Feedback_Date";

        // ==================================================================================================
        // ==================================================================================================
        // ==================================================================================================
        // ==== 3. Получение данных о Статьях, описывающих картины. ====
        // ==================================================================================================
        // ==================================================================================================
        // ==================================================================================================
        // 3.1. Предварительные данные о статье (результирующая оценка картины, которую описывает
        //      эта статья, рассчитанная как среднее значение, всех оценок, данных соавторами статьи).
        public static string SQL_Report_9 =
            "SELECT Article_ID, Article_Canvas, Article_Resume, Article_Date, ROUND(AVG(Grade * 1.00), 2) AS Article_Grade " +
            "FROM ArtArticle JOIN ArtCoAuthors ON " +
            "Article_ID = Article WHERE Grade IS NOT NULL " +
            "GROUP BY Article_ID, Article_Canvas, Article_Resume, Article_Date";

        // ==================================================================================================
        // 3.2. Итоговые данные о статьях (рассчитывается рейтинг каждой статьи -  исходя из совокупной
        //      оценки всех критических отзывов, данных разными искусствоведами на эту статью).
        public static string SQL_Report_10 =
            "SELECT Article_ID, Article_Canvas, Article_Resume, Article_Date, Article_Grade, SUM(Score_Weight) AS Article_Rating " +
            "FROM (" + SQL_Report_9 + ")  AS T5 LEFT JOIN (" + SQL_Report_7 + ") AS T6 ON " +
            "Article_ID = Article " +
            "GROUP BY Article_ID, Article_Canvas, Article_Resume, Article_Date, Article_Grade";

        // ==================================================================================================
        // 3.3. Итоговые данные о статьях - отсортированные по рейтингу и дате
        public static string SQL_Report_11 =
            SQL_Report_10 + " ORDER BY Article_Rating DESC, Article_Date";

        // ==================================================================================================
        // 3.4. Выбор только одной статьи с самым высоким рейтингом - 
        //      для заданной Картины (Canvas_Id), которую описывает эта статья
        //      (т.е. одну и ту же картину могут описывать много разных статей,
        //      но нам нужна только одна из них - с самым высоким рейтингом).
        //      ВНИМАНИЕ!!!
        //      Этот запрос ссылается на внешнее поле (Canvas_Id), которое 
        //      должно быть переданно ему из более высокоуровнего запроса, 
        //      в который он будет вложен (т.е. этот запрос НЕ может выполняться сам по себе!)
        public static string SQL_Report_12 =
            "SELECT TOP(1) Article_Grade " +
            "FROM (" + SQL_Report_10 + ") AS T7 " +
            "WHERE Article_Canvas = Canvas_Id " +
            "ORDER BY Article_Rating DESC";

        // ==================================================================================================
        // ==================================================================================================
        // ==================================================================================================
        // ==== 4. Получение данных о Картинах. ====
        // ==================================================================================================
        // ==================================================================================================
        // ==================================================================================================
        // 4.1. Название картины и ее оценка, взятая из статьи, описывающую эту 
        //      картину (одной из многих), с наиболее высоким рейтингом.
        //
        public static string SQL_Report_13 =
            "SELECT Canvas_Id, Canvas_Name, Canvas_Screen, (" + SQL_Report_12 + ") AS Canvas_Grade " +
            "FROM ArtCanvases " +
            "ORDER BY Canvas_Grade DESC, Canvas_Name";

        // ==================================================================================================
        // ==================================================================================================
        // ==================================================================================================
        // ==== 5. Установление взаимосвязей между Искусствоведами и Отзывами. ====
        // ==================================================================================================
        // ==================================================================================================
        // ==================================================================================================
        // 5.1. Логическая связь Искусствоведа (Critic) и Отзыва (Feedback_ID).
        //      Один и тот же искусствовед может быть автором многих отзывов.                                
        //      Сортировка по идентификатору искусствоведа, а затем по убыванию оценки статьи в отзыве 
        //      и по дате самого отзыва.
        public static string SQL_Report_14 =
            "SELECT Critic, Feedback_ID, Score_Weight, Feedback_Date " +
            "FROM (" + SQL_Report_6 + ") AS T8 " +
            "ORDER BY Critic, Score_Weight DESC, Feedback_Date";

        // ==================================================================================================
        // ==================================================================================================
        // ==================================================================================================
        // ==== 6. Установление взаимосвязей между Статьями и Отзывами. ====
        // ==================================================================================================
        // ==================================================================================================
        // ==================================================================================================
        // 6.1. Логическая связь Статьи (Article) и Отзыва (Feedback_ID).
        //      Один и та же статья может иметь много отзывов.                
        //      Cортировка по идентификатору статьи, а затем по убыванию оценки статьи в отзыве 
        //      и по дате самого отзыва.
        public static string SQL_Report_15 =
            "SELECT Article, Feedback_ID, Score_Weight, Feedback_Date " +
            "FROM (" + SQL_Report_6 + ") AS T9 " +
            "ORDER BY Article, Score_Weight DESC, Feedback_Date";

        // ==================================================================================================
        // ==================================================================================================
        // ==================================================================================================
        // ==== 7. Установление взаимосвязей между Статьями и Искусствоведами. ====
        // ==================================================================================================
        // ==================================================================================================
        // ==================================================================================================
        // 7.1. Логическая связь Статьи (Article) и Искусствоведа (Critic).
        //      Одна и та же статья имеет соавторами многих разных искусствоведов.
        //      При этом один и тот же искусствовед может быть соавтором многих разных статей.                
        //      Сортировка по идентификатору статьи, а затем по убыванию статуса искусствоеда, 
        //      а так же по ФИО искусствоведа
        public static string SQL_Report_16 =
            "SELECT Article, Critic_ID, Category_Weight, Critic_LastName, Critic_FirstName, Critic_Patronymic " +
            "FROM ArtCoAuthors JOIN (" + SQL_Report_3 + ") AS T10 ON Critic = Critic_ID " +
            "ORDER BY Article, Category_Weight DESC, Critic_LastName, Critic_FirstName, Critic_Patronymic";


        // ==================================================================================================
        // ==================================================================================================
        // ==================================================================================================
        // ==== 8. Установление взаимосвязей между Картинами и Статьями. ====
        // ==================================================================================================
        // ==================================================================================================
        // ==================================================================================================
        // 8.1. Логическая  связь Картины (Article_Canvas) и Статьи (Article_ID).
        //      Одна и та же картина может иметь множество статей, посвященных этой картине.
        //      Cортировка по идентификатору картины, а затем по убыванию рейтинга статьи 
        //      и по дате издания статьи.
        public static string SQL_Report_17 =
            "SELECT Article_Canvas, Article_ID, Article_Rating, Article_Date " +
            "FROM (" + SQL_Report_10 + ") AS T11 " +
            "ORDER BY Article_Canvas, Article_Rating DESC, Article_Date";

        // ==================================================================================================
        // ==================================================================================================
        // ==================================================================================================
        // ==== 9. Установление взаимосвязей между Искусствоведами и Статьями. ====
        // ==================================================================================================
        // ==================================================================================================
        // ==================================================================================================
        // 9.1. Логическая  связь Искусствоведа (Critic) и Статьи (Article).
        //      Один и тот же искусствовед может быть соавтором многих  разных статей.
        //      Сортировка по идентификатору искусствоведа, а затем по убыванию рейтинга статьи
        //      и по дате издания статьи.
        public static string SQL_Report_18 =
            "SELECT Critic, Article, Article_Rating, Article_Date " +
            "FROM ArtCoAuthors JOIN (" + SQL_Report_10 + ") AS T12 ON Article = Article_ID " +
            "ORDER BY Critic, Article_Rating DESC, Article_Date";
    }
}
