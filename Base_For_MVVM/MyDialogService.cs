// ------------------------------------------------------------------------------------------------------------
// ---- popov 22.04.2021 ----
// ------------------------------------------------------------------------------------------------------------
// Специализированный класс для более глубокого размежевания Моделей Представления и, собственно,
// самого Представления.
// ------------------------------------------------------------------------------------------------------------
// Инициализация этого класса происходит один раз в момент звагрузки программы.
// При этом устанавливается связь между типом Модели Представления и типом объекта,
// скрывающего работу с соответствующим диалоговым окном.
// Таким образом, тип конкретного диалогового окна остается скрыт для Модели Представления -
// точно так же, как и сама Модель представления остается скрытой для соответствующего ей
// диалогового окна...
// ------------------------------------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace Base_For_MVVM
{
    public class MyDialogService
    {
        // таблица соответствия между типом модели представления и типом сокрытия диалога (DialogHiding)
        private static Dictionary<Type, Type> DialogHidingTable = new Dictionary<Type, Type>();

        // -----------------------------------------------------------------------------------------------------
        // метод регистрации соответствия между парой типов:
        //  - T1 (Ключ) = тип специализированной модели представления, работающей с диалоговым окном
        //  - T2 (Значение) = тип класса для сокрытия диалога, соответствующего этой модели представления
        public static void Register<T1, T2>()
            where T1 : DialogBaseViewModel
            where T2 : IDialogHiding<T1>
        {
            if (!DialogHidingTable.ContainsKey(typeof(T1)))
            {
                DialogHidingTable.Add(typeof(T1), typeof(T2));
            }
        }

        // -----------------------------------------------------------------------------------------------------
        // метод отображения диалога для заданного типа модели представления
        public static bool? ShowDialog<T1>(T1 obj)
            where T1 : DialogBaseViewModel
        {
            if (!DialogHidingTable.ContainsKey(typeof(T1)))
            {
                return null;
            }

            // выцепляем тип класса для сокрытия диалогового окна
            Type DlgHider = DialogHidingTable[typeof(T1)];
            // создаем объект этого класса DlgHider
            IDialogHiding<T1> TheHidingObject = (IDialogHiding<T1>)Activator.CreateInstance(DlgHider);

            // запускаем его (объекта) метод ShowDialog 
            return TheHidingObject.ShowDialog(obj);
        }
    }
}
